trigger:
  - main

pool:
  vmImage: ubuntu-latest

variables:
  createArtifact: ne(variables['Build.Reason'], 'PullRequest')

stages:
  - stage: "Build"
    displayName: "Build"
    jobs:
      - job: "Build"
        steps:
          - task: DotNetCoreCLI@2
            displayName: "Building App"
            inputs:
              command: "build"
              projects: "*.sln"
              arguments: "--configuration Release"

          - task: DotNetCoreCLI@2
            displayName: "Testing App"
            inputs:
              command: "test"
              projects: "**/*[Tt]ests/*.csproj"
              arguments: "-c Release"

          - task: DotNetCoreCLI@2
            displayName: "Create App Artifact"
            inputs:
              command: "publish"
              publishWebProjects: false
              projects: "**/*.csproj"
              arguments: "--configuration Release --output $(Build.ArtifactStagingDirectory)"
              modifyOutputPath: false

          - publish: "$(Build.ArtifactStagingDirectory)"
            artifact: $(Build.Repository.Name)
            displayName: "Publishing Pipeline Artifact"
            condition: ${{ variables.createArtifact }}

  - stage: "Deploy"
    displayName: "Deploy App"
    condition: and(succeeded('Build'), ${{ variables.createArtifact }})
    jobs:
      - deployment: "App"
        environment: "workshop"
        strategy:
          canary:
            increments: [10, 20]
            preDeploy:
              steps:
                - task: AzureAppServiceManage@0
                  displayName: "Starting App Service"
                  inputs:
                    azureSubscription: "workshop-svc-conn"
                    Action: "Start Azure App Service"
                    WebAppName: "APP-WORKSHOP01"
                    SpecifySlotOrASE: true
                    ResourceGroupName: "RG-SAMPLE"
                    Slot: "stage"

                - task: AzureRmWebAppDeployment@4
                  inputs:
                    ConnectionType: "AzureRM"
                    azureSubscription: "workshop-svc-conn"
                    appType: "webAppLinux"
                    WebAppName: "APP-WORKSHOP01"
                    deployToSlotOrASE: true
                    ResourceGroupName: "RG-SAMPLE"
                    SlotName: "stage"
                    packageForLinux: "$(Pipeline.Workspace)/$(Build.Repository.Name)/*.zip"
            deploy:
              steps:
                - task: AzureCLI@2
                  inputs:
                    azureSubscription: "workshop-svc-conn"
                    scriptType: "bash"
                    scriptLocation: "inlineScript"
                    inlineScript: "az webapp traffic-routing set --distribution stage=$(strategy.increment) --name APP-WORKSHOP01 --resource-group RG-SAMPLE"
            postRouteTraffic:
              steps:
                - script: |
                    for counter in $(seq 1 20); do
                      status_code=$(curl --write-out %{http_code} --silent --output /dev/null https://app-workshop01.azurewebsites.net)

                      if [[ "$status_code" -ne 200 ]] ; then
                        echo "##vso[task.logissue type=error]Website cannot be swapped. It has an unhealthy status."
                        exit 1
                      fi
                    done
                  displayName: "Validating site status"
            on:
              failure:
                steps:
                  - script: |
                      az webapp traffic-routing clear --name APP-WORKSHOP01 --resource-group RG-SAMPLE

                  - task: AzureAppServiceManage@0
                    displayName: "Stoping App Service"
                    inputs:
                      azureSubscription: "workshop-svc-conn"
                      Action: "Stop Azure App Service"
                      WebAppName: "APP-WORKSHOP01"
                      SpecifySlotOrASE: true
                      ResourceGroupName: "RG-SAMPLE"
                      Slot: "stage"
              success:
                steps:
                  - task: AzureAppServiceManage@0
                    inputs:
                      azureSubscription: "workshop-svc-conn"
                      Action: "Swap Slots"
                      WebAppName: "APP-WORKSHOP01"
                      ResourceGroupName: "RG-SAMPLE"
                      SourceSlot: "stage"

                  - script: |
                      az webapp traffic-routing clear --name APP-WORKSHOP01 --resource-group RG-SAMPLE

                  - task: AzureAppServiceManage@0
                    displayName: "Stop App Service"
                    inputs:
                      azureSubscription: "workshop-svc-conn"
                      Action: "Start Azure App Service"
                      WebAppName: "APP-WORKSHOP01"
                      SpecifySlotOrASE: true
                      ResourceGroupName: "RG-SAMPLE"
                      Slot: "stage"
